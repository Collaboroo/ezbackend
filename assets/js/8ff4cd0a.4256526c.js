"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[847],{876:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),f=o,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3485:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var r=n(7896),o=n(1461),i=(n(2784),n(876)),a=["components"],s={sidebar_position:5},l="Configuration",c={unversionedId:"tutorial-basics/configuration",id:"tutorial-basics/configuration",isDocsHomePage:!1,title:"Configuration",description:"EzBackend is designed from the bottom up to be extremely customisable, so that you can customise everything.",source:"@site/docs/tutorial-basics/configuration.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/configuration",permalink:"/ezbackend/docs/tutorial-basics/configuration",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/tutorial-basics/configuration.md",version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Accessing the database",permalink:"/ezbackend/docs/tutorial-basics/accessing-the-database"},next:{title:"Auto Generated APIs",permalink:"/ezbackend/docs/tutorial-basics/auto-generated-routes"}},u=[{value:"Default Config",id:"default-config",children:[{value:"Understanding the config",id:"understanding-the-config",children:[]}]},{value:"Understanding plugins",id:"understanding-plugins",children:[]}],p={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"EzBackend is designed from the bottom up to be extremely customisable, so that you can customise everything."),(0,i.kt)("p",null,"However, for simpler customisations, a ",(0,i.kt)("inlineCode",{parentName:"p"},"config.ts")," file exists in ",(0,i.kt)("inlineCode",{parentName:"p"},".ezb")," to allow the user easy configuration of the fastify and sequelize instance (Assuming you are using fastify and sequelize)"),(0,i.kt)("h2",{id:"default-config"},"Default Config"),(0,i.kt)("p",null,"The default config file may look like this"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import path from "path";\n\nexport default {\n  port: 8888,\n  server: {\n    port: process.env.PORT ? Number(process.env.PORT) : 8888,\n    logger: {\n      prettyPrint: {\n        translateTime: "SYS:HH:MM:ss",\n        ignore: "pid,hostname,reqId,responseTime,req,res",\n        messageFormat: "[{req.method} {req.url}] {msg}",\n      },\n    },\n  },\n  orm: {\n    logging: false,\n  },\n  entryPoint: path.resolve(__dirname, "index.ts"),\n  connectionURI: "sqlite::memory"\n  plugins: [\n    "@ezbackend/common",\n    "@ezbackend/openapi"\n  ]\n};\n')),(0,i.kt)("h3",{id:"understanding-the-config"},"Understanding the config"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"port")," - The port on which the server runs on. e.g in this case your server runs at ",(0,i.kt)("a",{parentName:"p",href:"http://localhost:8888"},"http://localhost:8888")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"server")," - The options that get passed to fastify. e.g "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import fastify from 'fastify'\nconst server = fastify(options.server)\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"connectionURI")," - the connection URI as specified ",(0,i.kt)("a",{parentName:"p",href:"https://sequelize.org/master/manual/getting-started.html"},"here"),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"orm")," - The options that get passed to sequelize."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import {Sequelize} from 'sequelize'\nconst sequelize = new Sequelize(options.connectionURI, options.orm)\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"entryPoint")," - The filename of the file where your models are specified. ",(0,i.kt)("inlineCode",{parentName:"p"},'path.resolve(__dirname, "index.ts")')," will always resolve to an ",(0,i.kt)("inlineCode",{parentName:"p"},"index.ts")," file in the same folder as ",(0,i.kt)("inlineCode",{parentName:"p"},"config.ts")),(0,i.kt)("h2",{id:"understanding-plugins"},"Understanding plugins"),(0,i.kt)("p",null,"EzBackend is designed to be extremely extensible, in other words everything should be a plugin. To illustrate this point, EzBackend is built like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"@ezbackend/core\n|_ @ezbackend/common (Plugin to generate API routes automatically)\n|_ @ezbackend/openapi (Plugin to generate docs automatically)\n")),(0,i.kt)("p",null,"Everything in ezbackend can be achieved with plugins, and you can understand about how they work ",(0,i.kt)("a",{parentName:"p",href:"/"},"here")))}d.isMDXComponent=!0}}]);